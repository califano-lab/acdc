% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getFinal.R
\name{getFinal}
\alias{getFinal}
\title{Single Cell cluster determination by generalized simulated annealing}
\usage{
getFinal(
  S.obj,
  res = 0.5,
  NN = 15,
  assay = "RNA",
  slot = "scale.data",
  reduction = TRUE,
  reduction.slot = "pca",
  num.pcs = NULL,
  verbose = FALSE,
  clust.alg = 1,
  type.fun = "mean.silhouette",
  rng.seed = 0
)
}
\arguments{
\item{S.obj}{A Seurat object}

\item{res}{value for resolution (numeric). Default is \code{0.5}.}

\item{NN}{number of nearest neighbors (numeric). Default is \code{15}.}

\item{assay}{assay to use in construction of (S)NN. Default is \code{"RNA"}; used only when \code{reduction} is \code{FALSE}}

\item{slot}{slot to use in construction of (S)NN. Default is \code{scale.data}; used only when \code{reduction} is \code{FALSE}}

\item{reduction}{Logical. Whether to perform clustering using principal components (\code{TRUE}) or
original variables in the provided \code{slot} of the Seurat object \code{assay} (\code{FALSE}). Setting \code{reduction} = \code{TRUE} requires
a \code{DimReduc} object of name \code{"pca"} to be present in \code{S.obj}.}

\item{reduction.slot}{reduction slot to use if \code{reduction} is set to \code{TRUE}, ignored otherwise. Default is \code{"pca"}}

\item{num.pcs}{number of principal components to use for the construction of the (S)NN (numeric). Used only if \code{reduction = TRUE}. Default is \code{NULL},
meaning that all principal components in the dimensionality reduction slot are employed in (S)NN construction.}

\item{verbose}{whether to print the outcomes of \code{FindNeighbors} and \code{FindClusters} at each function call. Default is \code{FALSE}.}

\item{clust.alg}{Algorithm for modularity optimization (input to \code{Seurat::FindClusters}). \code{1} = Louvain (default); \code{2} = Louvain
with multilevel refinement; \code{3} = SLM; \code{4} = Leiden (requires the leidenalg python). See \code{Seurat::FindClusters()}
for further details.}

\item{type.fun}{Metric to evaluate the quality of the clustering solution. Options include: \code{"mean.silhouette"} = mean
silhouette computed over all cells in the dataset (default); \code{"median.silhouette"} = median silhouette computed over all cells in
the dataset. \code{"group.mean.silhouette"} = mean of the per-group average silhouettes. \code{"group.median.silhouette"} = mean of the
per-group median silhouettes. \code{"generalized.logistic"} = mean of the transformed-silhouette computed using a generalized logistic
transformation. See vignette for further details.}

\item{rng.seed}{Seed of the random number generator used in \code{FindClusters}.}
}
\value{
Returns an object of class Seurat with the with optimal clustering solution stored in the metadata \code{seurat_clusters}, the
corresponding \code{silhouette} object stored in \code{Seurat_object[[assay]]@misc$sil} and the value of the metric \code{type.fun} for the assessment of the cluster quality
\code{Seurat_object[[assay]]@misc$metric}.
}
\description{
\code{getFinal()} returns clustering solution and the optimal score corresponding to the given input parameters,
using a modularity optimization based clustering algorithm. \code{getFinal()} makes use of
\code{FindNeighbors()} and \code{FindClusters()} from the Seurat package to construct a SNN
graph and identify clusters by optimizing a modularity function. To evaluate the quality of the returned solution
\code{getFinal()} returns the value associated to a user-defined metric (see \code{type.fun}).
}
\details{
Continue with description of details
}
\note{
Add notes
}
\examples{
\dontrun{
# Just to retrieve example data
# devtools::install_github('satijalab/seurat-data') # if package SeuratData is needed, just for e.g.

library(SeuratData) # just to retrieve some example data
AvailableData() # to see some example data
InstallData("pbmc3k")
pbmc3k.final <- LoadData("pbmc3k",type="pbmc3k.final")

# Actual example
# Get clustering solution on gene expression data with input parameters

clustering.output <- getFinal(S.obj=pbmc3k.final,
res=0.5,
NN=15,
reduction=FALSE,
verbose=TRUE)
}


\dontrun{
# Get clustering solution using principal components as features and add the 
clustering solution to the metadata under the voice `seurat_clusters` and the 
median silhouette computed across all cells as the output metric in `S.obj[["RNA"]]@misc$metric`.

S.obj <- getFinal(S.obj=pbmc3k.final,
res=1,
NN=30,
reduction=TRUE,
type.fun="median.silhouette"
}



}
\seealso{
\code{\link[Seurat]{FindNeighbors}}, \code{\link[Seurat]{FindClusters}}
}
\author{
Luca Zanella
}
