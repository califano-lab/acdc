breaks=theBreaks
#filename=plot.name,
#width=plt.size
)
save_pheatmap_tiff(pMRs_MRs,plot.name,width=plt.size,height=plt.size)
source("C:/Users/zaneluc15010/Desktop/NEPC_PatientsCodes/Viper_P1_NEPCPatients.R")
source("C:/Users/zaneluc15010/Desktop/NEPC_PatientsCodes/Viper_P3_NEPCPatients.R")
source("C:/Users/zaneluc15010/Desktop/NEPC_PatientsCodes/Viper_P3_NEPCPatients.R")
source("C:/Users/zaneluc15010/Desktop/NEPC_PatientsCodes/Viper_P4_NEPCPatients.R")
source("C:/Users/zaneluc15010/Desktop/NEPC_PatientsCodes/NEPC_Signature.R")
source("C:/Users/zaneluc15010/Desktop/NEPC_PatientsCodes/NEPC_Signature.R")
source("C:/Users/zaneluc15010/Desktop/NEPC_PatientsCodes/NEPC_Signature.R")
nets.objs
net.objs
net.objs
Sobjs
length(Sobjs)
length(net.objs)
net.objs
help("pruneRegulon")
source("C:/Users/zaneluc15010/Desktop/NEPC_PatientsCodes/NEPC_Signature.R")
net.objs
net.objs
N_nets <- length(net.objs)
N_nets
Sobjs
Sobjs
N_sobjs <- length(Sobjs)
N_sobjs
counts <- NULL
counts
genes_names
source("C:/Users/zaneluc15010/Desktop/NEPC_PatientsCodes/NEPC_Signature.R")
genes_names
length(genes_names)
genes_common <- Reduce(intersect, lapply(genes_names, function(x) {x})) # common genes
length(genes_common)
length(genes_names
)
mdata <- NULL
help)viper
help(viper)
Sobjs[[k]] <- AddMetaData(Sobjs[[k]], rep(paste0("P",k), ncol(Sobjs[[k]])), col.name="Patient" )
Sobjs[[k]]@meta.data
Sobjs[[k]] <- AddMetaData(Sobjs[[k]], rep(p, ncol(Sobjs[[k]])), col.name="Patient" )
Sobjs
Sobjs[[k]]
Sobjs[[k]]@meta.data
meta.data <- NULL
source("C:/Users/zaneluc15010/Desktop/NEPC_PatientsCodes/NEPC_Signature.R")
source("C:/Users/zaneluc15010/Desktop/NEPC_PatientsCodes/NEPC_Signature.R")
meta.data
tail(meta.data)
head(meta.data)
rm(list=ls()) # cleans workspace
#.rs.restartR() # restart memory to free RAM
gc()
cat("\014")
suppressWarnings(suppressMessages(library(dplyr)))
suppressWarnings(suppressMessages(library(ggplot2)))
suppressWarnings(suppressMessages(library(Seurat)))
suppressWarnings(suppressMessages(library(SeuratObject)))
#library(reticulate)
#library(anndata) #reticulate::install_miniconda(); anndata::install_anndata()
suppressWarnings(suppressMessages(library(Matrix)))
suppressWarnings(suppressMessages(library(SparseM)))
suppressWarnings(suppressMessages(library(tidyverse)))
suppressWarnings(suppressMessages(library(cowplot)))
suppressWarnings(suppressMessages(library(purrr)))
suppressWarnings(suppressMessages(library(PISCES)))
#suppressWarnings(suppressMessages(library(readxl)))
suppressWarnings(suppressMessages(library(data.table)))
suppressWarnings(suppressMessages(library(silhClust)))
suppressWarnings(suppressMessages(library(viper)))
suppressWarnings(suppressMessages(library(pheatmap)))
suppressWarnings(suppressMessages(library(optparse)))
res.val <- 300
plt.size <- 2*1080 # width, height
Computer <- "Dell_Xps15" #Dell_Xps15" # "iMac # "CentOS"
switch(Computer,
"Dell_Xps15"={
CodesFolder <- paste0("/Users/",Sys.info()[["user"]],"/Desktop/")
ScratchFolder <- paste0("W:/")
},
"iMac"={
CodesFolder <- paste0("/Users/",Sys.info()[["user"]],"/Desktop/")
ScratchFolder <- paste0("/Volumes/lz2841-2/")
},
"CentOS"={
CodesFolder <- paste0("/ifs/scratch/c2b2/ac_lab/lz2841/")
ScratchFolder <- CodesFolder
})
source(paste0(ScratchFolder,"R_CustomFunctions/PlottingFunctions.R"))
source(paste0(ScratchFolder,"R_CustomFunctions/DataPreprocessing.R"))
source(paste0(ScratchFolder,"R_CustomFunctions/AnalysisFunctions.R"))
source(paste0(ScratchFolder,"R_CustomFunctions/NetSignatures.R"))
source(paste0(ScratchFolder,"R_CustomFunctions/vaxtools/R/net-enrichment.R"))
source(paste0(ScratchFolder,"R_CustomFunctions/NetSignatures.R"))
CellTypes <- "onlyTumor" # "all_epithelial" "onlyTumor"
switch(CellTypes,
"onlyTumor"={
Viper_allEpithelials <- paste0(ScratchFolder,"NEPCPatients/SeuratObjects/Viper_NEPC_tumor/")
},
"all_epithelial"={
Viper_allEpithelials <- paste0(ScratchFolder,"NEPCPatients/SeuratObjects/Viper_NEPC_allEpithelials/")
})
CellTypes
switch(CellTypes,
"onlyTumor"={
Viper_allEpithelials <- paste0(ScratchFolder,"NEPCPatients/SeuratObjects/Viper_NEPC_tumor/")
},
"all_epithelial"={
Viper_allEpithelials <- paste0(ScratchFolder,"NEPCPatients/SeuratObjects/Viper_NEPC_allEpithelials/")
})
if (!exists(Viper_allEpithelials)){
dir.create(Viper_allEpithelials)
}
list.files(Viper_allEpithelials)
patients <- sub(Viper_allEpithelials,1,2)
patinets
patients
help(sub)
help("substring")
patients <- substr(Viper_allEpithelials,1,2)
patients
rdsFiles <- list.files(Viper_allEpithelials)
rdsFiles
patients <- substr(rdsFiles,1,2)
patients
60*25
p
p <- patients[p1]
p <- patients[1]
p
rdsFiles
help(list.files)
rdsFiles <- list.files(Viper_allEpithelials,full.names=TRUE)
rdsFiles
n <- 1
Epithelial <- readRDS(rdsFiles[n])
Epithelial
Epithelial$Patient
unique(Epithelial$Patient)
S.obj <- readRDS(rdsFiles[n])
S.obj
S.obj
S.obj
S.obj
S.obj
S.obj@meta.data
sum(S.obj@meta.data$NE_phenotype == TRUE)
sum(S.obj@meta.data$NE_phenotype0
sum(S.obj@meta.data$NE_phenotype)
sum(S.obj@meta.data$NE_phenotype)
S.obj <- readRDS(rdsFiles[2])
sum(S.obj@meta.data$NE_phenotype)
S.obj <- readRDS(rdsFiles[5])
S.obj
sum(S.obj@meta.data$NE_phenotype)
sum(S.obj@meta.data$NE_phenotype)/length(S.obj$NE_phenotype)
unique(S.obj$Patient)
S.obj <- readRDS(rdsFiles[6])
sum(S.obj@meta.data$NE_phenotype)/length(S.obj$NE_phenotype)
n <- 1
for (p in patients){
S.obj <- readRDS(rdsFiles[n])
print(p," fraction of NE cells: ",sum(S.obj@meta.data$NE_phenotype)/length(S.obj$NE_phenotype))
n <- n + 1
}
print(paste0(p," fraction of NE cells: ",
sum(S.obj@meta.data$NE_phenotype)/length(S.obj$NE_phenotype)))
for (p in patients){
S.obj <- readRDS(rdsFiles[n])
print(paste0(p," fraction of NE cells: ",
sum(S.obj@meta.data$NE_phenotype)/length(S.obj$NE_phenotype)))
n <- n + 1
}
help(round)
print(paste0(p," fraction of NE cells: ",
round( sum(S.obj@meta.data$NE_phenotype)/length(S.obj$NE_phenotype)), 2) )
print(paste0(p," fraction of NE cells: ",
round( sum(S.obj@meta.data$NE_phenotype)/length(S.obj$NE_phenotype))*100, digits=2) )
print(paste0(p," fraction of NE cells: ",
round( sum(S.obj@meta.data$NE_phenotype)/length(S.obj$NE_phenotype))*100) )
print(paste0(p," fraction of NE cells: ",
round( sum(S.obj@meta.data$NE_phenotype)/length(S.obj$NE_phenotype))*100,3) )
print(paste0(p," fraction of NE cells: ",
round( sum(S.obj@meta.data$NE_phenotype)*100/length(S.obj$NE_phenotype), digits=2)) )
print(paste0(p," fraction of NE cells: ",
round( sum(S.obj@meta.data$NE_phenotype)*100/length(S.obj$NE_phenotype), digits=2)),"\%" )
print(paste0(p," fraction of NE cells: ",
round( sum(S.obj@meta.data$NE_phenotype)*100/length(S.obj$NE_phenotype), digits=2)),"%" )
print(paste0(p," fraction of NE cells: ",
round( sum(S.obj@meta.data$NE_phenotype)*100/length(S.obj$NE_phenotype), digits=2)),"\\%" )
print(paste0(p," fraction of NE cells: ",
round( sum(S.obj@meta.data$NE_phenotype)*100/length(S.obj$NE_phenotype), digits=2)),"percent" )
print(paste0(p," fraction of NE cells: ",
round( sum(S.obj@meta.data$NE_phenotype)*100/length(S.obj$NE_phenotype), digits=2) ), " percent" )
print(paste0(p," fraction of NE cells: ",
round( sum(S.obj@meta.data$NE_phenotype)*100/length(S.obj$NE_phenotype), digits=2) ) )
cat("Case: ",CellTypes)
cat("Case: ",CellTypes,"\n")
help(viper)
viper
0.3^10
help(sigT)
print(paste0(p," percentage of NE cells: ",
round( sum(S.obj@meta.data$NE_phenotype)*100/length(S.obj$NE_phenotype), digits=2), " percent" ) )
patients <- substr(rdsFiles,1,2)
cat("Case: ",CellTypes,"\n")
patients <- substr(rdsFiles,1,2)
n <- 1
for (p in patients){
S.obj <- readRDS(rdsFiles[n])
print(paste0(p," percentage of NE cells: ",
round( sum(S.obj@meta.data$NE_phenotype)*100/length(S.obj$NE_phenotype), digits=2), " percent." ) )
n <- n + 1
}
CellTypes <- "allEpithelial" # "all_epithelial" "onlyTumor"
switch(CellTypes,
"onlyTumor"={
Viper_allEpithelials <- paste0(ScratchFolder,"NEPCPatients/SeuratObjects/Viper_NEPC_tumor/")
},
"all_epithelial"={
Viper_allEpithelials <- paste0(ScratchFolder,"NEPCPatients/SeuratObjects/Viper_NEPC_allEpithelials/")
})
rdsFiles <- list.files(Viper_allEpithelials,full.names=TRUE)
rdFiles
rdsFiles
CellTypes <- "all_epithelial" # "all_epithelial" "onlyTumor"
switch(CellTypes,
"onlyTumor"={
Viper_allEpithelials <- paste0(ScratchFolder,"NEPCPatients/SeuratObjects/Viper_NEPC_tumor/")
},
"all_epithelial"={
Viper_allEpithelials <- paste0(ScratchFolder,"NEPCPatients/SeuratObjects/Viper_NEPC_allEpithelials/")
})
rdsFiles <- list.files(Viper_allEpithelials,full.names=TRUE)
cat("Case: ",CellTypes,"\n")
rdsFiles
patients <- substr(rdsFiles,1,2)
n <- 1
for (p in patients){
S.obj <- readRDS(rdsFiles[n])
print(paste0(p," percentage of NE cells: ",
round( sum(S.obj@meta.data$NE_phenotype)*100/length(S.obj$NE_phenotype), digits=2), " percent." ) )
n <- n + 1
}
CellTypes <- "onlyTumor" # "all_epithelial" "onlyTumor"
switch(CellTypes,
"onlyTumor"={
Viper_allEpithelials <- paste0(ScratchFolder,"NEPCPatients/SeuratObjects/Viper_NEPC_tumor/")
},
"all_epithelial"={
Viper_allEpithelials <- paste0(ScratchFolder,"NEPCPatients/SeuratObjects/Viper_NEPC_allEpithelials/")
})
rdsFiles <- list.files(Viper_allEpithelials,full.names=TRUE)
rdsFiles
patients <- substr(rdsFiles,1,2)
n <- 1
for (p in patients){
S.obj <- readRDS(rdsFiles[n])
print(paste0(p," percentage of NE cells: ",
round( sum(S.obj@meta.data$NE_phenotype)*100/length(S.obj$NE_phenotype), digits=2), " percent." ) )
n <- n + 1
}
help(aREA)
help(gsea)
net.regulon.obj
View(net.regulon.obj)
View(net.regulon.obj)
devtools::document()
getwd()
setwd("..")
getwd()
getwd("Desktop")
getwd("/Desktop")
setwd("/Desktop")
setwd("Desktop")
devtools::document()
setwd("silhClust")
devtools::document()
devtools::build()
devtools::install()
library(silhClusrt)
library(silhClust)
help("SAClustering")
cat(paste0(p," percentage of NE cells: ",
round( sum(S.obj@meta.data$NE_phenotype)*100/length(S.obj$NE_phenotype), digits=2), " percent.\n" ) )
p
CellTypes <- "onlyTumor" # "all_epithelial" "onlyTumor"
rm(list=ls()) # cleans workspace
#.rs.restartR() # restart memory to free RAM
gc()
cat("\014")
suppressWarnings(suppressMessages(library(dplyr)))
suppressWarnings(suppressMessages(library(ggplot2)))
suppressWarnings(suppressMessages(library(Seurat)))
suppressWarnings(suppressMessages(library(SeuratObject)))
#library(reticulate)
#library(anndata) #reticulate::install_miniconda(); anndata::install_anndata()
suppressWarnings(suppressMessages(library(Matrix)))
suppressWarnings(suppressMessages(library(SparseM)))
suppressWarnings(suppressMessages(library(tidyverse)))
suppressWarnings(suppressMessages(library(cowplot)))
suppressWarnings(suppressMessages(library(purrr)))
suppressWarnings(suppressMessages(library(PISCES)))
#suppressWarnings(suppressMessages(library(readxl)))
suppressWarnings(suppressMessages(library(data.table)))
suppressWarnings(suppressMessages(library(silhClust)))
suppressWarnings(suppressMessages(library(viper)))
suppressWarnings(suppressMessages(library(pheatmap)))
suppressWarnings(suppressMessages(library(optparse)))
# Settings
{
res.val <- 300
plt.size <- 2*1080 # width, height
Computer <- "Dell_Xps15" #Dell_Xps15" # "iMac # "CentOS"
switch(Computer,
"Dell_Xps15"={
CodesFolder <- paste0("/Users/",Sys.info()[["user"]],"/Desktop/")
ScratchFolder <- paste0("W:/")
},
"iMac"={
CodesFolder <- paste0("/Users/",Sys.info()[["user"]],"/Desktop/")
ScratchFolder <- paste0("/Volumes/lz2841-2/")
},
"CentOS"={
CodesFolder <- paste0("/ifs/scratch/c2b2/ac_lab/lz2841/")
ScratchFolder <- CodesFolder
})
}
source(paste0(ScratchFolder,"R_CustomFunctions/PlottingFunctions.R"))
source(paste0(ScratchFolder,"R_CustomFunctions/DataPreprocessing.R"))
source(paste0(ScratchFolder,"R_CustomFunctions/AnalysisFunctions.R"))
source(paste0(ScratchFolder,"R_CustomFunctions/NetSignatures.R"))
CellTypes <- "onlyTumor" # "all_epithelial" "onlyTumor"
switch(CellTypes,
"onlyTumor"={
Viper_allEpithelials <- paste0(ScratchFolder,"NEPCPatients/SeuratObjects/Viper_NEPC_tumor/")
},
"all_epithelial"={
Viper_allEpithelials <- paste0(ScratchFolder,"NEPCPatients/SeuratObjects/Viper_NEPC_allEpithelials/")
})
rdsFiles <- list.files(Viper_allEpithelials,full.names=TRUE)
cat("Case: ",CellTypes,"\n")
patients <- substr(rdsFiles,1,2)
p=patients[1]
n <- 1
for (p in patients){
S.obj <- readRDS(rdsFiles[n])
cat(paste0(p," percentage of NE cells: ",
round( sum(S.obj@meta.data$NE_phenotype)*100/length(S.obj$NE_phenotype), digits=2), " percent.\n" ) )
if (CellTypes == "onlyTumor"){
}
n <- n + 1
}
S.obj
S.obj$Patient
Sobjs
Sobj
S.obj
S.obj@[["SCT"]]
S.obj[["SCT"]]
S.obj
S.obj@meta.data$NE_phenotype
S.obj$NE_phenotype
S.obj$NE_phenotype == TRUE
NE_cellCall <- S.obj$NE_phenotype %>%
filter(NE_phenotype == TRUE)
NE_cellCall <- S.obj$NE_phenotype %>%
filter(.,NE_phenotype == TRUE)
S.obj$NE_phenotype
S.obj@meta.data$NE_phenotype
class(S.obj@meta.data$NE_phenotype)
class(S.obj$NE_phenotype)
as.data.frame(S.obj@meta.data$NE_phenotype)
NE_cellCall <- as.data.frame(S.obj$NE_phenotype) %>%
filter(.,NE_phenotype == TRUE)
head(as.data.frame(S.obj$NE_phenotype))
NE_cellCall <- S.obj@meta.data %>%
select(.,NE_phenotype) %>%
filter(NE_phenotype == TRUE)
NE_cellCall <- S.obj@meta.data %>%
select(NE_phenotype) %>%
filter(NE_phenotype == TRUE)
NE_cellCall <- as_tibble(S.obj@meta.data) %>%
select(NE_phenotype) %>%
filter(NE_phenotype == TRUE)
NE_cellCall <- S.obj@meta.data %>%
select("NE_phenotype") %>%
filter(NE_phenotype == TRUE)
help(select)
NE_cellCall <- S.obj@meta.data %>%
select(.,"NE_phenotype") %>%
filter(NE_phenotype == TRUE)
NE_cellCall <- S.obj$NE_phenotype
class(NE_cellCall)
NE_cellCall <- S.obj$NE_phenotype %>%
as.data.frame()
NE_cellCall
NE_cellCall
head(NE_cellCall)
NE_cellCall <- S.obj@meta.data %>% select(Patient)
NE_cellCall <- as_tibble(S.obj@meta.data) %>% select(Patient)
library(tibble)
NE_cellCall <- as_tibble(S.obj@meta.data) %>% select(Patient)
library(purrr)
NE_cellCall <- as_tibble(S.obj@meta.data) %>% select(Patient)
NE_cellCall <- cbind(S.obj$NE_phenotype, S.obj$Beltran_enrichment) %>%
as.data.frame()
NE_cellCall
NE_cellCall <- S.obj@meta.data[S.obj$NE_phenotype, S.obj$Beltran_enrichment]
NE_cellCall <- S.obj@meta.data[,S.obj$NE_phenotype, S.obj$Beltran_enrichment]
S.obj@meta.data
NE_cellCall <- select[S.obj,NE_phenotype, Beltran_enrichment]
NE_cellCall <- select[S.obj,S.obj$NE_phenotype, S.obj$Beltran_enrichment]
Beltran_enrichments <- cbind(S.obj$Beltran_enrichment)
Beltran_enrichments
Beltran_enrichments <- S.obj$Beltran_enrichment
Beltran_enrichments
class(Beltran_enrichments)
NE_cellCall <- S.obj$NE_phenotype == TRUE
NE_cellCall
NE_cellCall <- NE_cellCall[S.obj$NE_phenotype == TRUE]
NE_cellCall
length(NE_cellCall)
rownames(NE_cellCall)
names(NE_cellCall)
NE_cellCall <- names(NE_cellCall)
NE_cellCall
as.data.frame(NE_cellCall)
NE_cellCall <- names(NE_cellCall) %>% as.data.frame()
NE_cellCall
NE_cellCall
NE_cellCall <- NE_cellCall[S.obj$NE_phenotype == TRUE]
NE_cellCall <- S.obj$NE_phenotype[S.obj$NE_phenotype == TRUE]
NE_cellCall <- names(NE_cellCall) %>% as.data.frame()
NE_cellCall
colnames(NE_cellCall) <- "NE_pheno"
colnames(NE_cellCall) <- "NE_pheno"
colnames(NE_cellCall) <- "NE_phenotype"
NE_cellCall
wb <- xlsx::createWorkbook()
class(S.obj$Beltran_enrichment)
S.obj$Beltran_enrichment %>% as.data.frame()
S.obj$Beltran_enrichment %>% as.data.frame() %>% head()
colnames(Beltran_enrichments) <- "Beltran_enrichments"
Beltran_enrichments <- as.data.frame(S.obj$Beltran_enrichment)
colnames(Beltran_enrichments) <- "Beltran_enrichments"
Beltran_enrichments
head(Beltran_enrichments)
wb1 <- xlsx::createWorkbook()
wb2 <- xlsx::createWorkbook()
# list of cells that exhibit NE phenotype
NE_cellCall <- S.obj$NE_phenotype[S.obj$NE_phenotype == TRUE]
NE_cellCall
NE_cellCall <- names(NE_cellCall) %>% as.data.frame()
NE_cellCall
colnames(NE_cellCall) <- "NE_phenotype"
head(NE_cellCall)
# NES for each cell
Beltran_enrichments <- as.data.frame(S.obj$Beltran_enrichment)
Beltran_enrichments
head(Beltran_enrichments)
colnames(Beltran_enrichments) <- "Beltran_enrichments"
sheet <- xlsx::createSheet(wb2, sheetName=paste0("NE_NES_",p))
xlsx::addDataFrame(S.obj$Beltran_enrichment,sheet=sheet)
# list of cells that exhibit NE phenotype
NE_cellCall <- S.obj$NE_phenotype[S.obj$NE_phenotype == TRUE]
NE_cellCall <- names(NE_cellCall) %>% as.data.frame()
colnames(NE_cellCall) <- "NE_phenotype"
sheet <- xlsx::createSheet(wb1, sheetName=paste0("NE_epithelial_tumor_",p))
p
p=patients[1]
# list of cells that exhibit NE phenotype
NE_cellCall <- S.obj$NE_phenotype[S.obj$NE_phenotype == TRUE]
NE_cellCall
NE_cellCall <- names(NE_cellCall) %>% as.data.frame()
colnames(NE_cellCall) <- "NE_phenotype"
sheet <- xlsx::createSheet(wb1, sheetName=paste0("NE_epithelial_tumor_",p))
p
patients
rdsFiles <- list.files(Viper_allEpithelials,full.names=TRUE)
rdsFiles
help(list.files)
patients <- substr(rdsFiles,1,2)
p=patients[1]
p
patients <- substr(rdsFiles,1,2)
patients <- cat("P",1:6)
patients <- paste0("P",1:6)
patinets
patients
p=patients[1]
p
# list of cells that exhibit NE phenotype
NE_cellCall <- S.obj$NE_phenotype[S.obj$NE_phenotype == TRUE]
NE_cellCall <- names(NE_cellCall) %>% as.data.frame()
colnames(NE_cellCall) <- "NE_phenotype"
sheet <- xlsx::createSheet(wb1, sheetName=paste0("NE_epithelial_tumor_",p))
xlsx::addDataFrame(NE_cellCall,sheet=sheet)
# NES for each cell
Beltran_enrichments <- as.data.frame(S.obj$Beltran_enrichment)
colnames(Beltran_enrichments) <- "Beltran_enrichments"
sheet <- xlsx::createSheet(wb2, sheetName=paste0("NE_NES_",p))
xlsx::addDataFrame(S.obj$Beltran_enrichment,sheet=sheet)
xlsx::saveWorkbook(wb1, paste0(ScratchFolder,"NEPC_Patients/","NE_cellCall.xlsx")) # Savings list of NE cells
ScratchFolder
xlsx::saveWorkbook(wb1, paste0(ScratchFolder,"NEPCPatients/","NE_cellCall.xlsx")) # Savings list of NE cells
xlsx::saveWorkbook(wb2, paste0(ScratchFolder,"NEPCPatients/","NE_Beltran_enrichments.xlsx")) # Savings list of Beltran enrichments
source("C:/Users/zaneluc15010/Desktop/NEPC_PatientsCodes/NE_cellsCall.R")
